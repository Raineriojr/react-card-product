/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 src/assets/models/espada.glb --transform -t
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

import Sword from '../models/sword-transformed.glb';

type GLTFResult = GLTF & {
  nodes: {
    Blade: THREE.Mesh
    Hilt: THREE.Mesh
    Handle: THREE.Mesh
    Pommel: THREE.Mesh
    HiltConnect: THREE.Mesh
    PommelConnect: THREE.Mesh
  }
  materials: {
    blade: THREE.MeshStandardMaterial
    Hilt: THREE.MeshStandardMaterial
    Handle: THREE.MeshStandardMaterial
    Pommel: THREE.MeshStandardMaterial
    HandleConnect: THREE.MeshStandardMaterial
    PommelConnect: THREE.MeshStandardMaterial
  }
}

export function SwordModel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(Sword) as unknown as GLTFResult
  return (
    <group {...props} dispose={null} rotation={[0.5,0,0]} scale={1.2} position={[0, -3, 0]}>
      <mesh
        geometry={nodes.Blade.geometry}
        material={materials.blade}
        position={[0, 1, 0]}
      />
      <mesh
        geometry={nodes.Hilt.geometry}
        material={materials.Hilt}
      />
      <mesh
        geometry={nodes.Handle.geometry}
        material={materials.Handle}
        position={[0, -1.89, 0]}
      />
      <mesh
        geometry={nodes.Pommel.geometry}
        material={materials.Pommel}
        position={[0, -4.02, 0]}
      />
      <mesh
        geometry={nodes.HiltConnect.geometry}
        material={materials.HandleConnect}
        position={[0, -0.28, 0]}
      />
      <mesh
        geometry={nodes.PommelConnect.geometry}
        material={materials.PommelConnect}
        position={[0, -3.51, 0]}
      />
    </group>
  )
}

useGLTF.preload(Sword)
