/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 src/assets/models/poly.glb --transform -t
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

import Camera from '../models/camera-transformed.glb';

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh
  }
  materials: {}
}

export function CameraModel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(Camera) as unknown as GLTFResult
  return (
    <group {...props} dispose={null} scale={110} position={[0, 2, 0]}>
      <mesh
        geometry={nodes.mesh_0.geometry}
        material={nodes.mesh_0.material}
      />
    </group>
  )
}

useGLTF.preload(Camera)
